#+title: Tests
For each setup script in [[file:~/work/src][src]], a test script written with [[https://github.com/bats-core/bats-core][Bats]] exists. The tests can be executed with:
#+begin_example
  $ ./test/bats/bin/bats -t test/<test-file>.bats
#+end_example
#+begin_src bats :tangle test/test-template.bats :mkdirp yes :noweb strip-export :shebang #!/usr/bin/env bats :exports none
  <<setup>>
  <<teardown>>

  <<Must print success message>>
  <<Environment must be clean after execution with default version>>
  <<Environment must be clean after execution with given version>>
#+end_src

Each test needs a setup, which loads the necessary Bats libraries:
- [[https://github.com/bats-core/bats-support][bats-support]]
- [[https://github.com/bats-core/bats-assert][bats-assert]]
Furthermore, the exported variables are backed up. In this case at least the ~PATH~
#+name: setup
#+begin_src bats
  setup() {
    load 'test_helper/bats-support/load'
    load 'test_helper/bats-assert/load'

    SPT_ORIGINAL_PATH="$PATH"
  }
#+end_src

To clean up, the exported variables are reset to its saved values after each test:
#+name: teardown
#+begin_src bats
  teardown() {
      PATH="$SPT_ORIGINAL_PATH"
  }
#+end_src

* Test cases

** Must print success message
If successful, a success message must be printed:
#+name: Must print success message
#+begin_src bats
  @test "Must print success message" {
      run . src/setup-template.sh

      assert_line 'TMPL successfully installed'
  }
#+end_src

** Environment must be clean after execution

*** With default version
After the script has run without a given version, the newly introduced global variables shall not be set and ~$OPTIND~ must be ~1~. Furhtermore the exported ~$PATH~ must be extended with the default version:
#+name: Environment must be clean after execution with default version
#+begin_src bats
  @test "Environment must be clean after execution with default version" {
      assert [ $OPTIND -eq 1 ]
      assert [ -z $INSTALLATION_BASE_DIR ]
      assert [ -z $VERSION ]

      . src/setup-template.sh

      assert [ $OPTIND -eq 1 ]
      assert [ -z $INSTALLATION_BASE_DIR ]
      assert [ -z $VERSION ]
      assert [ $PATH == "$HOME/opt/tmpl-tmpl_default-version:$SPT_ORIGINAL_PATH" ]
  }
#+end_src

*** With given version
After the script has run with a given version, the newly introduced global variables shall not be set and ~$OPTIND~ must be ~1~. Furhtermore the exported ~$PATH~ must be extended with the given version:
#+name: Environment must be clean after execution with given version
#+begin_src bats
  @test "Environment must be clean after execution with given version" {
      assert [ $OPTIND -eq 1 ]
      assert [ -z $INSTALLATION_BASE_DIR ]
      assert [ -z $VERSION ]

      . src/setup-template.sh -v some_other-version

      assert [ $OPTIND -eq 1 ]
      assert [ -z $INSTALLATION_BASE_DIR ]
      assert [ -z $VERSION ]
      assert [ $PATH == "$HOME/opt/tmpl-some_other-version:$SPT_ORIGINAL_PATH" ]
  }
#+end_src
