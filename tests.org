#+title: Tests
For each setup script in [[file:~/work/src][src]], a test script written with [[https://github.com/bats-core/bats-core][Bats]] exists. The tests can be executed with:
#+begin_example
  $ ./test/bats/bin/bats -t test/<test-file>.bats
#+end_example

, which can be executed. Each test case has pre- and postconditions. To define pre- and postconditions assertions are defined, which must be fulfilled.
Therefore the test script has definitions of assertions and test cases and an execution block for the test cases.
#+begin_src bats :tangle test/test-template.bats :mkdirp yes :noweb strip-export :shebang #!/usr/bin/env bats :exports none
    setup() {
      load 'test_helper/bats-support/load'
      load 'test_helper/bats-assert/load'
    }

    <<default_version_must_be_printed>>
    <<environment_must_be_clean_after_execution_with_default_version>>
    <<environment_must_be_clean_after_execution_with_given_version>>
#+end_src

* Test cases

** Must print default version
If usage information is printed, the correct default version must be shown.
#+name: default_version_must_be_printed
#+begin_src bats
  @test "Default version must be printed" {
      run load ../src/setup-template.sh

      assert_line -p 'Default: tmpl_default-version'
  }
#+end_src

** Environment must be clean after execution

*** With default version
After the script has run, the newly introduced global variables shall not be set and ~$OPTIND~ must be ~1~.
#+name: environment_must_be_clean_after_execution_with_default_version
#+begin_src bats
  @test "Environment must be clean after execution with default version" {
      assert [ $OPTIND -eq 1 ]
      assert [ -z $INSTALLATION_BASE_DIR ]
      assert [ -z $VERSION ]

      run load ../src/setup-template.sh

      assert [ $OPTIND -eq 1 ]
      assert [ -z $INSTALLATION_BASE_DIR ]
      assert [ -z $VERSION ]
  }
#+end_src

*** With given version
After the script has run, the newly introduced global variables shall not be set and ~$OPTIND~ must be ~1~.
#+name: environment_must_be_clean_after_execution_with_given_version
#+begin_src bats
  @test "No previous installation default version" {
      assert [ $OPTIND -eq 1 ]
      assert [ -z $INSTALLATION_BASE_DIR ]
      assert [ -z $VERSION ]

      run load ../src/setup-template.sh -v some_other-version

      assert [ $OPTIND -eq 1 ]
      assert [ -z $INSTALLATION_BASE_DIR ]
      assert [ -z $VERSION ]
  }
#+end_src
